<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.35">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.3.9"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.3.9">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>5</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.74">
    <script>pipeline {
    agent any
    tools {
        maven &apos;maven3&apos;
    }
    environment {
        scannerHome = tool &apos;sonarqube4&apos;
    }
    stages {
        stage (&apos;Checkout&apos;) {
            steps {
                checkout([$class: &apos;GitSCM&apos;, 
                branches: [[name: &apos;*/master&apos;]], 
                doGenerateSubmoduleConfigurations: false, 
                extensions: [[$class: &apos;CleanCheckout&apos;]], 
                submoduleCfg: [], 
                userRemoteConfigs: [[credentialsId: &apos;&apos;, url: &apos;https://github.com/cbdchang/simple-java-maven-app.git&apos;]]
            ])  
            }
        }
        stage (&apos;Initialize&apos;) {
            steps {
                sh &apos;&apos;&apos;
                    echo &quot;PATH = ${PATH}&quot;
                    echo &quot;M2_HOME = ${M2_HOME}&quot;
                &apos;&apos;&apos;
            }
        }
        stage (&apos;Build and Scan&apos;) {
            steps {
                withSonarQubeEnv(installationName: &apos;sonarqube&apos;) { // You can override the credential to be used
                    sh &apos;mvn -DskipTests -B clean package sonar:sonar&apos;
                }
            }
        }
    }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>